listen_address = "0.0.0.0:8081"
metric_address = "127.0.0.1:8403"
log_level = "info"
# random, round_robin, least_loaded_time,uri_hash, frist
balance = "frist"
host_rule = "./assets/host_rule.toml"

# balance = "roundrobin"

[backends]

# local server 1
[backends.local1]
protocol = "quic"
# cafile for client auth
address = "localhost:8443"
# retry timeout when the backend fail to connect remote server
retry_timeout = 3
# 0 is no max retries
max_retries = 0

cacert = "./assets/example-certs/ca.crt"
client_key = "./assets/example-certs/client/client.key"
client_cert = "./assets/example-certs/client/client.crt"

[backends.local1.http2]
keep_alive_interval = 1
keep_alive_timeout = 1
keep_alive_while_idle = true

# bbr, cubic
[backends.local1.quic]
max_idle_timeout = 200
keep_alive_interval = 0
ipv4_only = true
expected_rtt = 300
max_stream_bandwidth = 2097152
congestion = "bbr"

# local server 1
[backends.local2]
status = "force_closed"
protocol = "http2"
address = "localhost:8443"
retry_timeout = 3
max_retries = 0
cacert = "./assets/example-certs/ca.crt"
client_key = "./assets/example-certs/client/client.key"
client_cert = "./assets/example-certs/client/client.crt"
[backends.local2.http2]
keep_alive_interval = 1
keep_alive_timeout = 1
keep_alive_while_idle = true

# server 2
[backends.remote1]
status = "force_closed"
protocol = "quic"
# cafile for client auth
address = "localhost:8444"
# retry timeout when the backend fail to connect remote server
retry_timeout = 30

cacert = "./assets/example-certs/ca.crt"
client_key = "./assets/example-certs/client/client.key"
client_cert = "./assets/example-certs/client/client.crt"
